# Vehicle and Non-Vehicle Classification with Neural Networks and OpenCV

This repository features a machine learning model and an OpenCV script designed to classify vehicles using a webcam. The project employs a pre-trained Keras model for vehicle detection and OpenCV for capturing video frames from the webcam.

## Model Overview

The model, `keras_model.h5`, is a Keras-based neural network trained to categorize images into two classes:

- **Vehicles**
- **Non-vehicles**

The classification labels are defined in `labels.txt` as follows:

0 Vehicles
1 Non-vehicles


## Requirements

- Python 3.x
- Keras
- TensorFlow
- OpenCV

Install the required packages with the following command:

```bash
pip install keras tensorflow opencv-python

Usage
The openCVpart.py script uses OpenCV to access the webcam and process the video stream to detect vehicles. Here's an overview of the script's functionality:

Import Libraries: Import the necessary libraries, including Keras for model loading and OpenCV for handling the webcam feed.
Load Model: Load the pre-trained Keras model.
Capture Video: Use OpenCV to start capturing video from the default webcam.
Process Frames: Analyze each frame to determine if it contains a vehicle.
Display Results: Display the detection results on the video feed in real-time.

Next Steps
Future enhancements of this project include using a WiFi-enabled camera for image frame capture and vehicle identification. The steps involved are:

Integrate WiFi Camera: Connect and configure a WiFi-enabled camera to the system.
Capture Frames over WiFi: Modify the script to capture frames from the WiFi camera instead of the default webcam.
Process and Display: Continue processing the frames using the pre-trained Keras model and display the results in real-time.
